name: Continuous Delivery

on:
  workflow_run:
    workflows: [ Continuous Integration ]
    types: [ completed ]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_VERSION: 6.0.x
  TZ: CET # https://stackoverflow.com/q/53510011

jobs:
  publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment: ${{ contains(fromJson('["develop", "master"]'), github.ref_name) && 'production' || 'development' }}
    runs-on: ubuntu-20.04

    env:
      FEED_SOURCE: https://api.nuget.org/v3/index.json
      FEED_APIKEY: ${{ secrets.FEED_APIKEY }}
      SONARCLOUD_URL: https://sonarcloud.io
      SONARCLOUD_ORGANIZATION: testcontainers
      SONARCLOUD_KEY: testcontainers_testcontainers-dotnet
      SONARCLOUD_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          clean: true
          lfs: true
          fetch-depth: 0

      - name: Download Test And Coverage Results (ubuntu-20.04)
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-20.04

      - name: Download Test And Coverage Results (windows-2019)
        uses: actions/download-artifact@v3
        with:
          name: windows-2019

      - name: Fix Absolute Code Coverage Paths
        run: |
          Get-ChildItem -Path 'test-coverage' -Filter *.xml | % { (Get-Content $_) -Replace '[A-Za-z0-9:\-\/\\]+src', '${{ github.workspace }}/src' | Set-Content $_ }
          Get-ChildItem -Path 'test-coverage' -Filter *.xml | % { (Get-Content $_) -Replace '[A-Za-z0-9:\-\/\\]+tests', '${{ github.workspace }}/tests' | Set-Content $_ }
        shell: pwsh

      - name: Restore .NET Tools
        run: dotnet tool restore

      - name: Restore NuGet Packages
        run: dotnet cake --target=Restore-NuGet-Packages

      - name: Run Sonar Analysis
        run: dotnet cake --target=Sonar-Begin

      - name: Run Build
        run: dotnet cake --target=Build

      - name: Upload Sonar Results
        run: dotnet cake --target=Sonar-End

      - name: Publish NuGet Package
        run: dotnet cake --target=Publish
